(window.webpackJsonp=window.webpackJsonp||[]).push([[196],{630:function(t,s,a){"use strict";a.r(s);var e=a(23),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"判断两个object数组对象是否相等"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断两个object数组对象是否相等"}},[t._v("#")]),t._v(" 判断两个Object数组对象是否相等")]),t._v(" "),a("h2",{attrs:{id:"问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[t._v("#")]),t._v(" 问题")]),t._v(" "),a("p",[t._v("list1 = [{xx:2},{xx:4}]\nlist2 = [{xx:32},{xx:4}]")]),t._v(" "),a("p",[t._v("求两个list是否相同")]),t._v(" "),a("h2",{attrs:{id:"解决"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决"}},[t._v("#")]),t._v(" 解决")]),t._v(" "),a("ol",[a("li",[t._v("可以循环判断每个值是否相等,有一个相等就不继续循环了,可以用some")]),t._v(" "),a("li",[t._v("利用JSON.stringify 把两个数组对象都转成字符串判断是否相等,如果有一点点不一样,都会是false(推荐做法,时间空间复杂度友好)")])])])}),[],!1,null,null,null);s.default=r.exports}}]);