(window.webpackJsonp=window.webpackJsonp||[]).push([[138],{575:function(n,s,a){"use strict";a.r(s);var t=a(23),e=Object(t.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"java多态性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java多态性"}},[n._v("#")]),n._v(" JAVA多态性")]),n._v(" "),a("p",[n._v("面向对象三大特征: 封装性,继承性,"),a("code",[n._v("多态性")]),n._v("\nextends继承或者implements实现,是多态性的前提\n"),a("img",{attrs:{src:"/img/duotai.png",alt:"img"}})]),n._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/*\n* 代码中体现多态性,其实就是一句话: 父类引用指向子类对象\n* 格式:\n* 父类名称 对象名 = new 子类名称();\n* 或者:\n* 接口名称 对象名 = new 实现类名称();\n* */")]),n._v("\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br")])]),a("blockquote",[a("p",[n._v("左侧父类的引用,指向右侧子类的对象 Fu obj = new Zi();")])]),n._v(" "),a("p",[n._v("多态的成员变量的使用特点\n编译看左边,运行看左边\n多态的成员方法的使用特点\n编译看左边,运行看右边")])])}),[],!1,null,null,null);s.default=e.exports}}]);