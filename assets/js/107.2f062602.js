(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{544:function(a,s,t){"use strict";t.r(s);var e=t(23),n=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"java中的继承"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java中的继承"}},[a._v("#")]),a._v(" Java中的继承")]),a._v(" "),t("h2",{attrs:{id:"基本概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[a._v("#")]),a._v(" 基本概念")]),a._v(" "),t("p",[a._v("程序中继承主要解决的问题是"),t("code",[a._v("共性抽取")]),a._v("\n父类->子类\n继承关系中的特点:")]),a._v(" "),t("ol",[t("li",[a._v("子类可以拥有父类的内容")]),a._v(" "),t("li",[a._v("子类可以拥有专属的内容")])]),a._v(" "),t("h2",{attrs:{id:"继承的格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#继承的格式"}},[a._v("#")]),a._v(" 继承的格式")]),a._v(" "),t("p",[a._v("在继承的关系中,子类就是一个父类,也就是说,子类可以被当做成父类看待,例如:父类是员工,子类是讲师,那么讲师就是一个员工,关系:is-a\n定义父类的格式:就是一个普通的类定义")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" 父类名称"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("定义子类的格式:使用extends 父类名称来继承")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" 子类名称 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" 父类名称 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("h2",{attrs:{id:"继承的三个特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#继承的三个特点"}},[a._v("#")]),a._v(" 继承的三个特点")]),a._v(" "),t("p",[a._v("Java语言是单继承的,一个类的直接父类只能有唯一一个,也就是说子类只能继承一个父类\nJava可以多级继承,子类继承父类,父类也是继承的另一个类:A=>B=>C,最顶端的父类,Object\n一个子类的直接父类是唯一的,但是一个父类可以拥有多个子类")]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/jicheng.png",alt:"img"}})])])}),[],!1,null,null,null);s.default=n.exports}}]);